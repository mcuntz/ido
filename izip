#!/bin/bash
#
# Wrapper for zip utility: if 'izip directory' then 'zip -r directory.zip directory' will be called.
#
# Copyright (c) 2015-2019 Matthias Cuntz - mc (at) macu (dot) de
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
set -e
#
prog=$0
pprog=$(basename ${prog})
dprog=$(dirname ${prog})
isdir=${PWD}
pid=$$
#
# --------------------------------------------------------------------------------------------------
function usage () {
    printf "${pprog} [-h] [options] inputs\n"
    printf "Wrapper for zip utility; options will be transferred directly to the zip utility.\n"
    printf '$(basename last_argument).zip will be the name of the zip archive.\n'
    printf "The -r option will be added if one of the given inputs is a directory.\n"
    printf "\n"
    printf "Input\n"
    printf "    inputs      files and direcotries.\n"
    printf "\n"
    printf "Options\n"
    printf "    -h          Prints this help screen.\n"
    printf "    all options allowed to zip utility. Try zip -h  or  man zip\n"
    printf "\n"
    printf "Examples\n"
    printf "    zip directory mydir into mydir.zip\n"
    printf "        ${pprog} mydir\n"
    printf "    zip directory mydir into mydir.zip; do not follow symbolic links\n"
    printf "        ${pprog} -y mydir\n"
    printf "    zip directory mydir/subdir into subdir.zip, which will have the full directory structure\n"
    printf "        ${pprog} mydir/subdir\n"
    printf "    zip directory mydir and all .py files into mydir.zip; mydir must be last argument\n"
    printf "        ${pprog} *.py mydir\n"
    printf "\n"
    printf "Copyright (c) 2015-2019 Matthias Cuntz - mc (at) macu (dot) de\n"
}
# --------------------------------------------------------------------------------------------------
# Start
#
#
# Get options and files
if [[ $# -eq 0 ]] ; then
    usage
    exit 2
fi
opt=""
ifiles=""
lfile=""
hasr=0
for i in "$@" ; do
    if [[ $(echo ${lfile} | cut -c 1) == "-" ]] ; then
	opt="${opt} ${lfile}"
    else
	ifiles="${ifiles} ${lfile}"
    fi
    lfile=${i}
    case ${i} in
	-h | -help | --h | --help) usage; exit 2;;
	-r | -R) hasr=1;;
    esac
done
#
# output zip file
ofile=$(basename "${lfile}").zip
#
# set -r option if needed
if [[ -d ${lfile} && ${hasr} -eq 0 ]] ; then opt="-r ${opt}" ; fi
if [[ ${hasr} -eq 0 ]] ; then
    for ff in $(echo ${ifiles}) ; do 
	if [[ -d ${ff} ]] ; then opt="-r ${opt}" ; fi
    done
fi
#
# Call zip
zip ${opt} ${ofile} ${ifiles} ${lfile}
#
exit 0
