#!/bin/bash
#
# Wrapper for zip utility: if 'izip directory' then 'zip -r directory.zip directory' will be called.
#
# Copyright (c) 2015 Matthias Cuntz - mc (at) macu (dot) de
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
set -e
#
prog=$0
pprog=$(basename ${prog})
dprog=$(dirname ${prog})
isdir=${PWD}
pid=$$
#
# --------------------------------------------------------------------------------------------------
function usage () {
    printf "${pprog} [-h] [options] zipfile input\n"
    printf "Wrapper for zip utility; options will be transferred directly to the zip utility.\n"
    printf "If the call is: ${pprog} directory, then this is wrapped to: zip -r directory.zip directory\n"
    printf "\n"
    printf "Input\n"
    printf "    zipfile     zipfile output name.\n"
    printf "                If zipfile is the only argument and it is a directory than the call is wrapped to\n"
    printf "                    zip -r zipfile.zip zipfile\n"
    printf "                Only the last subdirectory will be zipped; the zipfile will always be in the current directory, i.e.\n"
    printf "                izip dir1/dir2/dir3 will do\n"
    printf "                    cd dir1/dir2; zip -r dir3.zip dir3; mv dir3.zip ../..; cd -\n"
    printf "\n"
    printf "Options\n"
    printf "    -h          Prints this help screen.\n"
    printf "    all options allowed to zip utility. Try zip -h  or  man zip\n"
    printf "\n"
    printf "Examples\n"
    printf "    ${pprog} mydir\n"
    printf "    ${pprog} -f mydir.zip\n"
    printf "    ${pprog} mydir/subdir\n"
    printf "\n"
    printf "Copyright (c) 2015 Matthias Cuntz - mc (at) macu (dot) de\n"
}
# --------------------------------------------------------------------------------------------------
# Start
#
#
# Get options
if [[ $# -eq 0 ]] ; then
    usage
    exit 2
fi
for i in $* ; do
    case ${i} in
	-h | -help | --h | --help) usage; exit 2;;
    esac
done
#
# Check if single input and directory
if [[ $# -eq 1 ]] ; then
    if [[ -d "${1}" ]] ; then
	zipfile=$(basename "${1}")
	dir=$(dirname "${1}")
	if [[ "zipfile" == "." ]] ; then # if call was izip dir/.
	    zipfile=$(basename $(dirname "${1}"))
	    dir=$(dirname $(dirname "${1}"))
	fi
	if [[ "${dir}" != "." ]] ; then
	    cd "${dir}"
	fi
	zip -r "${zipfile}".zip "${zipfile}"
	if [[ "${dir}" != "." && "${dir}" != "${isdir}" ]] ; then
	    mv "${zipfile}".zip "${isdir}"
	    cd "${isdir}"
	fi
	exit 0
    fi
fi
#
# wrap to zip if not exited before
zip "$@"
#
exit 0
